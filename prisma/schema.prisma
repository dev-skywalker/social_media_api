generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  name      String
  email     String     @unique
  password  String
  createdAt DateTime   @default(now()) @map("created_at")
  comments  Comment[]
  posts     Post[]
  reactions Reaction[]

  @@map("users")
}

model Post {
  id        Int        @id @default(autoincrement())
  title     String
  content   String     @db.Text
  image     String?
  createdAt DateTime   @default(now()) @map("created_at")
  userId    Int
  comments  Comment[]
  author    User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  reactions Reaction[]

  @@index([userId], map: "posts_userId_fkey")
  @@map("posts")
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String   @db.Text
  createdAt DateTime @default(now()) @map("created_at")
  userId    Int
  postId    Int
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  author    User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([postId], map: "comments_postId_fkey")
  @@index([userId], map: "comments_userId_fkey")
  @@map("comments")
}

model Reaction {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @map("created_at")
  userId    Int
  postId    Int
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  author    User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, postId])
  @@index([postId], map: "reactions_postId_fkey")
  @@map("reactions")
}
